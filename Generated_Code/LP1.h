/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : LP1.h
**     Project     : FRDM_FXS_Components
**     Processor   : MKL26Z128VMC4
**     Component   : LowPower
**     Version     : Component 01.016, Driver 01.00, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2014-09-25, 20:35, # CodeGen: 0
**     Abstract    :
**
**     Settings    :
**
**     Contents    :
**         IsRecoveryThroughReset  - bool LP1_IsRecoveryThroughReset(void);
**         SetRecoveryThroughReset - void LP1_SetRecoveryThroughReset(bool value);
**         InitializeRAMinInit     - bool LP1_InitializeRAMinInit(void);
**         EntryPoint              - void LP1_EntryPoint(void);
**
**     (c) Copyright Erich Styger, 2009
**     http      : www.freescale.com
** ###################################################################*/
/*!
** @file LP1.h
** @version 01.00
** @brief
**
*/         
/*!
**  @addtogroup LP1_module LP1 module documentation
**  @{
*/         

#ifndef __LP1_H
#define __LP1_H

/* MODULE LP1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */

#include "Cpu.h"

extern bool LP1_RecoveryThroughReset;  /* if we went through reset because of low power recovery */



#define LP1_IsRecoveryThroughReset() \
  LP1_RecoveryThroughReset

/*
** ===================================================================
**     Method      :  LP1_IsRecoveryThroughReset (component LowPower)
**     Description :
**         Returns true if we went through reset because of recovery
**         from a low power mode.
**     Parameters  : None
**     Returns     :
**         ---             - if we went through reset sequence because
**                           of recovery
** ===================================================================
*/

#define LP1_SetRecoveryThroughReset(val) \
  (LP1_RecoveryThroughReset = val)

/*
** ===================================================================
**     Method      :  LP1_SetRecoveryThroughReset (component LowPower)
**     Description :
**         Called in case we were going through reset because of low
**         power recovery.
**     Parameters  :
**         NAME            - DESCRIPTION
**         value           - the value to be set
**     Returns     : Nothing
** ===================================================================
*/

#define LP1_InitializeRAMinInit() \
  TRUE /* for no special Init, we always need to initialize the RAM */

/*
** ===================================================================
**     Method      :  LP1_InitializeRAMinInit (component LowPower)
**     Description :
**         
**     Parameters  : None
**     Returns     :
**         ---             - if we need to initialize the RAM in Init
** ===================================================================
*/

void LP1_EntryPoint(void);
/*
** ===================================================================
**     Method      :  LP1_EntryPoint (component LowPower)
**     Description :
**         
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/* END LP1. */

#endif
/* ifndef __LP1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.4 [05.09]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
